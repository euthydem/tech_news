import React, { useEffect, useState } from 'react';
import { TransitionGroup, CSSTransition } from 'react-transition-group';
import ChatBot from 'react-simple-chatbot';
import './App.css';

function App() {
    const [technologies, setTechnologies] = useState([]);
    const [activeTechnology, setActiveTechnology] = useState(null);

    useEffect(() => {
        fetchTechnologies();
    }, []);

    async function fetchTechnologies() {
        // Emulating API response
        const response = {
            json: () =>
                Promise.resolve({
                    technologies: [
                        {
                            id: 1,
                            name: 'Развитие иммерсивного опыта',
                            description: 'Эти технологии предоставляют большие возможности для контроля данных, а также новые способы связи с клиентами и открытие новых источников дохода. \n' +
                                'Цифровой двойник клиента — виртуальный прототип производственных активов, который создаётся на основе большого количества данных об оригинале. Цифровая модель позволяет моделировать и предвидеть поведение оборудования, а также помогает менять параметры работы оборудования и вносить улучшения гораздо быстрее и безопаснее, чем при экспериментах на реальных объектах.\n' +
                                'Децентрализованная идентификация позволяет пользователю управлять своей цифровой идентификацией с помощью блокчейна или других технологий распределенных реестров, а также цифровых кошельков.\n' +
                                'Цифровые люди — интерактивные образы с определёнными знаниями и характеристиками личности. Управляются искусственным интеллектом.\n' +
                                'Внутренние кадровые рынки помогают подобрать сотрудников для ограниченных по времени проектов, не задействуя рекрутеров. \n' +
                                'Метавселенная — постоянно действующее виртуальное пространство, где люди могут взаимодействовать друг с другом и с цифровыми объектами через свои аватары, с помощью технологий виртуальной реальности.\n' +
                                'Невзаимозаменяемый токен (NFT) — уникальный программируемый цифровой объект на основе блокчейна, который публично подтверждает право собственности на цифровые активы, такие как цифровое искусство или музыка, или физические активы, которые токенизированы — недвижимость, транспорт или документы.\n' +
                                'Superapp — составное мобильное приложение, в которое входит несколько микроприложений, которые персонализируют взаимодействие с сервисом.\n' +
                                'Web3 — это новый стек технологий для разработки децентрализованных веб-приложений, которые позволяют пользователям контролировать свои личные данные.',
                            status: 'Active',
                        },
                        {
                            id: 2,
                            name: 'Ускоренная автоматизация ИИ',
                            description: 'Расширение внедрения ИИ — важный способ развития продуктов, услуг и решений. Это даёт возможность ускорить создание специализированных моделей ИИ, использовать алгоритмы для их разработки и обучения, а также внедрять их в производство продуктов, услуг и решений. В совокупности всё это позволит сделать прогнозы и решения более точными точнее, а ожидаемые выгоды можно будет получить быстрее. Рассмотрим основные примеры таких технологий.\n\nАвтономные системы — самоуправляемые физические или программные системы, выполняющие функции, ограниченные предметной областью. Это задачи, обладающие тремя фундаментальными характеристиками: автономией, обучением и свободой действий. Когда традиционные методы ИИ не способны обеспечить адаптивность, гибкость и гибкость бизнеса, автономные системы могут помочь внедрению. Чтобы стать массовыми, таким системам потребуется от пяти до десяти лет, но в результате они трансформируют процессы предприятия.\n\nПричинно-следственный искусственный интеллект (ИИ) выявляет и применяет причинно-следственные связи, чтобы выйти за рамки моделей прогнозирования на базе корреляции и перейти к системам ИИ, которые могут более эффективно предписывать действия и действовать более автономно.\n\nБазовые модели — это модели, основанные на архитектуре преобразователя, такие как большие языковые модели, которые воплощают тип архитектуры глубокой нейронной сети, которая вычисляет числовое представление текста в контексте окружающих слов, выделяя последовательности слов.\n\nИИ для генеративного дизайна или дизайн, дополненный ИИ, представляет собой использование технологий искусственного интеллекта, машинного обучения и обработки естественного языка для автоматического создания и разработки пользовательских потоков, дизайна экрана, контента и кода уровня представления для цифровых продуктов.\n\nИнструменты для генерации кода включают в себя размещенные в облаке модели машинного обучения, которые подключаются к интегрированным средам разработки профессиональных разработчиков. Эти среды представляют собой расширения, предлагающие предлагаемый код на основе либо описаний на естественном языке, либо частичных фрагментов кода.',
                            status: 'Active',
                        },
                        {
                            id: 3,
                            name: 'Оптимизация доставки технологий',
                            description: "Эти технологии сосредоточены на ключевых элементах построения цифрового бизнеса: сообществах разработчиков продуктов, услуг или решений (например, fusion teams) и платформах, которые они используют. Инновации обеспечивают обратную связь и понимание, что в свою очередь оптимизирует и ускоряет доставку продуктов, услуг и решений, повышают устойчивость бизнес-операций.\n" +
                                "Экосистемы облачных данных обеспечивают целостную среду управления данными, способную поддерживать весь спектр рабочих нагрузок данных — от исследовательской обработки данных до производственных хранилищ данных. Экосистемы поддерживают оптимизированную доставку и комплексную функциональность, которую легко развертывать, оптимизировать и обслуживать. Пройдёт от двух до пяти лет, прежде чем они будут использоваться повсеместно, однако эти технологии будут очень полезны.\n" +
                                "Расширенный FinOps автоматизирует традиционные концепции DevOps, связанные с гибкостью, непрерывной интеграцией и развертыванием, а также обратной связью с конечными пользователями для финансового управления, бюджетирования и оптимизации затрат за счет применения ИИ и машинного обучения.\n" +
                                "Облачная устойчивость (Cloud sustainability) — использование облачных сервисов для достижения устойчивого развития в рамках экономических, экологических и социальных систем.\n" +
                                "Вычислительное хранилище переносит обработку хоста из основной памяти центрального процессора на запоминающее устройство.\n" +
                                "Сетчатая архитектура кибербезопасности (CSMA) — новый подход к созданию компонуемых распределенных элементов управления безопасностью, повышающих её эффективность.\n" +
                                "Наблюдаемость данных — способность понимать состояние ландшафта данных организации, каналов и инфраструктуры данных путем постоянного мониторинга, отслеживания, оповещения, анализа и устранения неполадок.\n" +
                                "Динамическое управление рисками — это новый подход к определению ролей и обязанностей по управлению рисками. DRG адаптирует управление рисками в соответствии с каждым риском, позволяя организациям лучше управлять рисками и снижать стоимость гарантий.\n" +
                                "Отраслевые облачные платформы используют облачные сервисы SaaS, PaaS и IaaS, чтобы предлагать соответствующие отрасли комплексные инструменты бизнеса и технологий.\n" +
                                "Минимально жизнеспособная архитектура — стандартизированная структура, используемая продуктовыми группами для обеспечения своевременной и соответствующей требованиям разработки и итерации продуктов.\n" +
                                "Разработка, ориентированная на наблюдаемость — практика разработки программного обеспечения, которая обеспечивает детальную видимость и контекст состояния и поведения системы за счет проектирования систем, которые должны быть наблюдаемыми.\n" +
                                "OpenTelemetry — набор спецификаций, инструментов, интерфейсов прикладного программирования и наборов средств разработки ПО, которые описывают и поддерживают реализацию инструментария с открытым исходным кодом.\n" +
                                "Платформенная разработка — дисциплина создания и использования внутренних платформ самообслуживания для доставки программного обеспечения и управления жизненным циклом.",
                            status: 'Active',
                        },
                    ],
                }),
        };

        try {
            const data = await response.json();
            setTechnologies(data.technologies);
        } catch (error) {
            console.error('Ошибка получения данных:', error);
        }
    }

    const chatBotSteps = [
        {
            id: '1',
            message: 'Привет! Я чат-бот. Чем могу помочь?',
            trigger: '2',
        },
        {
            id: '2',
            user: true,
            trigger: '3',
        },
        {
            id: '3',
            message: 'Спасибо за ваше сообщение!',
            end: true,
        },
    ];

    return (
        <div className="container">
            <div className="background-animation"></div>
            <h1 className="title">Современные технологии по Gartner Hype Circle 2022</h1>
            <TransitionGroup component="ul" className="technology-list">
                {technologies.map((item) => (
                    <CSSTransition key={item.id} timeout={300} classNames="fade">
                        <div
                            className={`technology-item ${activeTechnology === item.id ? 'active' : ''}`}
                            onClick={() => setActiveTechnology(item.id)}
                        >
                            <h2>{item.name}</h2>
                            {activeTechnology === item.id && (
                                <div className="description">
                                    <p>{item.description}</p>
                                    <p>Status: {item.status}</p>
                                </div>
                            )}
                        </div>
                    </CSSTransition>
                ))}
            </TransitionGroup>
            <div className="chatbot-container">
                <ChatBot
                    steps={chatBotSteps}
                    floating={true}
                    floatingStyle={{
                        bottom: '20px',
                        right: '20px',
                        borderRadius: '5px',
                        boxShadow: '0 2px 5px rgba(0, 0, 0, 0.15)',
                        backgroundColor: '#7fc955',
                        color: '#333',
                    }}
                />
            </div>
        </div>
    );
}

export default App;
